/**
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { CallRecordingSavedPayloadPublicRecordingUrls } from '../models/CallRecordingSavedPayloadPublicRecordingUrls.ts';
import { CallRecordingSavedPayloadRecordingUrls } from '../models/CallRecordingSavedPayloadRecordingUrls.ts';
import { HttpFile } from '../http/http.ts';

export class ConferenceRecordingSavedPayload {
    /**
    * Participant\'s call ID used to issue commands via Call Control API.
    */
    'callControlId'?: string;
    /**
    * ID that is unique to the call session and can be used to correlate webhook events. Call session is a group of related call legs that logically belong to the same phone call, e.g. an inbound and outbound leg of a transferred call.
    */
    'callSessionId'?: string;
    /**
    * State received from a command.
    */
    'clientState'?: string;
    /**
    * Whether recording was recorded in `single` or `dual` channel.
    */
    'channels'?: ConferenceRecordingSavedPayloadChannelsEnum;
    /**
    * ID of the conference that is being recorded.
    */
    'conferenceId'?: string;
    /**
    * Call Control App ID (formerly Telnyx connection ID) used in the call.
    */
    'connectionId'?: string;
    /**
    * The audio file format used when storing the call recording. Can be either `mp3` or `wav`.
    */
    'format'?: ConferenceRecordingSavedPayloadFormatEnum;
    'publicRecordingUrls'?: CallRecordingSavedPayloadPublicRecordingUrls;
    /**
    * ISO 8601 datetime of when recording ended.
    */
    'recordingEndedAt'?: Date;
    /**
    * ID of the conference recording.
    */
    'recordingId'?: string;
    /**
    * ISO 8601 datetime of when recording started.
    */
    'recordingStartedAt'?: Date;
    'recordingUrls'?: CallRecordingSavedPayloadRecordingUrls;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "callControlId",
            "baseName": "call_control_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "callSessionId",
            "baseName": "call_session_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "clientState",
            "baseName": "client_state",
            "type": "string",
            "format": ""
        },
        {
            "name": "channels",
            "baseName": "channels",
            "type": "ConferenceRecordingSavedPayloadChannelsEnum",
            "format": ""
        },
        {
            "name": "conferenceId",
            "baseName": "conference_id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "connectionId",
            "baseName": "connection_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "format",
            "baseName": "format",
            "type": "ConferenceRecordingSavedPayloadFormatEnum",
            "format": ""
        },
        {
            "name": "publicRecordingUrls",
            "baseName": "public_recording_urls",
            "type": "CallRecordingSavedPayloadPublicRecordingUrls",
            "format": ""
        },
        {
            "name": "recordingEndedAt",
            "baseName": "recording_ended_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "recordingId",
            "baseName": "recording_id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "recordingStartedAt",
            "baseName": "recording_started_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "recordingUrls",
            "baseName": "recording_urls",
            "type": "CallRecordingSavedPayloadRecordingUrls",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ConferenceRecordingSavedPayload.attributeTypeMap;
    }

    public constructor() {
    }
}


export type ConferenceRecordingSavedPayloadChannelsEnum = "single" | "dual" ;
export type ConferenceRecordingSavedPayloadFormatEnum = "wav" | "mp3" ;

