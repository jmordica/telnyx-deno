/**
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http.ts';

/**
* The settings associated with the authentication provider.
*/
export class AuthenticationProviderSettings {
    /**
    * The Assertion Consumer Service URL for the service provider (Telnyx).
    */
    'assertionConsumerServiceUrl'?: string;
    /**
    * The Entity ID for the service provider (Telnyx).
    */
    'serviceProviderEntityId'?: string;
    /**
    * The Entity ID for the identity provider (IdP).
    */
    'idpEntityId'?: string;
    /**
    * The SSO target url for the identity provider (IdP).
    */
    'idpSsoTargetUrl'?: string;
    /**
    * The certificate fingerprint for the identity provider (IdP)
    */
    'idpCertFingerprint'?: string;
    /**
    * The algorithm used to generate the identity provider\'s (IdP) certificate fingerprint
    */
    'idpCertFingerprintAlgorithm'?: AuthenticationProviderSettingsIdpCertFingerprintAlgorithmEnum;
    /**
    * The name identifier format associated with the authentication provider. This must be the same for both the Identity Provider (IdP) and the service provider (Telnyx).
    */
    'nameIdentifierFormat'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "assertionConsumerServiceUrl",
            "baseName": "assertion_consumer_service_url",
            "type": "string",
            "format": ""
        },
        {
            "name": "serviceProviderEntityId",
            "baseName": "service_provider_entity_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "idpEntityId",
            "baseName": "idp_entity_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "idpSsoTargetUrl",
            "baseName": "idp_sso_target_url",
            "type": "string",
            "format": ""
        },
        {
            "name": "idpCertFingerprint",
            "baseName": "idp_cert_fingerprint",
            "type": "string",
            "format": ""
        },
        {
            "name": "idpCertFingerprintAlgorithm",
            "baseName": "idp_cert_fingerprint_algorithm",
            "type": "AuthenticationProviderSettingsIdpCertFingerprintAlgorithmEnum",
            "format": ""
        },
        {
            "name": "nameIdentifierFormat",
            "baseName": "name_identifier_format",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return AuthenticationProviderSettings.attributeTypeMap;
    }

    public constructor() {
    }
}


export type AuthenticationProviderSettingsIdpCertFingerprintAlgorithmEnum = "sha1" | "sha256" | "sha384" | "sha512" ;

