/**
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http.ts';

export class ConferenceSpeakRequest {
    /**
    * Call Control IDs of participants who will hear the spoken text. When empty all participants will hear the spoken text.
    */
    'callControlIds'?: Array<string>;
    /**
    * The text or SSML to be converted into speech. There is a 3,000 character limit.
    */
    'payload': string;
    /**
    * The type of the provided payload. The payload can either be plain text, or Speech Synthesis Markup Language (SSML).
    */
    'payloadType'?: ConferenceSpeakRequestPayloadTypeEnum;
    /**
    * The gender of the voice used to speak the text.
    */
    'voice': ConferenceSpeakRequestVoiceEnum;
    /**
    * The language used to speak the text.
    */
    'language': ConferenceSpeakRequestLanguageEnum;
    /**
    * Use this field to avoid execution of duplicate commands. Telnyx will ignore subsequent commands with the same `command_id` as one that has already been executed.
    */
    'commandId'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "callControlIds",
            "baseName": "call_control_ids",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "payload",
            "baseName": "payload",
            "type": "string",
            "format": ""
        },
        {
            "name": "payloadType",
            "baseName": "payload_type",
            "type": "ConferenceSpeakRequestPayloadTypeEnum",
            "format": ""
        },
        {
            "name": "voice",
            "baseName": "voice",
            "type": "ConferenceSpeakRequestVoiceEnum",
            "format": ""
        },
        {
            "name": "language",
            "baseName": "language",
            "type": "ConferenceSpeakRequestLanguageEnum",
            "format": ""
        },
        {
            "name": "commandId",
            "baseName": "command_id",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ConferenceSpeakRequest.attributeTypeMap;
    }

    public constructor() {
    }
}


export type ConferenceSpeakRequestPayloadTypeEnum = "text" | "ssml" ;
export type ConferenceSpeakRequestVoiceEnum = "male" | "female" ;
export type ConferenceSpeakRequestLanguageEnum = "arb" | "cmn-CN" | "cy-GB" | "da-DK" | "de-DE" | "en-AU" | "en-GB" | "en-GB-WLS" | "en-IN" | "en-US" | "es-ES" | "es-MX" | "es-US" | "fr-CA" | "fr-FR" | "hi-IN" | "is-IS" | "it-IT" | "ja-JP" | "ko-KR" | "nb-NO" | "nl-NL" | "pl-PL" | "pt-BR" | "pt-PT" | "ro-RO" | "ru-RU" | "sv-SE" | "tr-TR" ;

