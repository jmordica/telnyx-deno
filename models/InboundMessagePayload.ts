/**
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { InboundMessagePayloadCcInner } from '../models/InboundMessagePayloadCcInner.ts';
import { InboundMessagePayloadCost } from '../models/InboundMessagePayloadCost.ts';
import { InboundMessagePayloadFrom } from '../models/InboundMessagePayloadFrom.ts';
import { InboundMessagePayloadMediaInner } from '../models/InboundMessagePayloadMediaInner.ts';
import { InboundMessagePayloadToInner } from '../models/InboundMessagePayloadToInner.ts';
import { HttpFile } from '../http/http.ts';

export class InboundMessagePayload {
    /**
    * Identifies the type of the resource.
    */
    'recordType'?: InboundMessagePayloadRecordTypeEnum;
    /**
    * The direction of the message. Inbound messages are sent to you whereas outbound messages are sent from you.
    */
    'direction'?: InboundMessagePayloadDirectionEnum;
    /**
    * Identifies the type of resource.
    */
    'id'?: string;
    /**
    * The type of message. This value can be either \'sms\' or \'mms\'.
    */
    'type'?: InboundMessagePayloadTypeEnum;
    /**
    * Unique identifier for a messaging profile.
    */
    'messagingProfileId'?: string;
    'to'?: Array<InboundMessagePayloadToInner>;
    'cc'?: Array<InboundMessagePayloadCcInner>;
    '_from'?: InboundMessagePayloadFrom;
    /**
    * Message body (i.e., content) as a non-empty string.  **Required for SMS**
    */
    'text'?: string;
    'media'?: Array<InboundMessagePayloadMediaInner>;
    /**
    * The URL where webhooks related to this message will be sent.
    */
    'webhookUrl'?: string | null;
    /**
    * The failover URL where webhooks related to this message will be sent if sending to the primary URL fails.
    */
    'webhookFailoverUrl'?: string | null;
    /**
    * Encoding scheme used for the message body.
    */
    'encoding'?: string;
    /**
    * Number of parts into which the message\'s body must be split.
    */
    'parts'?: number;
    /**
    * Tags associated with the resource.
    */
    'tags'?: Array<string>;
    'cost'?: InboundMessagePayloadCost | null;
    /**
    * ISO 8601 formatted date indicating when the message request was received.
    */
    'receivedAt'?: Date;
    /**
    * Not used for inbound messages.
    */
    'sentAt'?: Date | null;
    /**
    * Not used for inbound messages.
    */
    'completedAt'?: Date | null;
    /**
    * Not used for inbound messages.
    */
    'validUntil'?: Date | null;
    /**
    * These errors may point at addressees when referring to unsuccessful/unconfirmed delivery statuses.
    */
    'errors'?: Array<Error>;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "recordType",
            "baseName": "record_type",
            "type": "InboundMessagePayloadRecordTypeEnum",
            "format": ""
        },
        {
            "name": "direction",
            "baseName": "direction",
            "type": "InboundMessagePayloadDirectionEnum",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "InboundMessagePayloadTypeEnum",
            "format": ""
        },
        {
            "name": "messagingProfileId",
            "baseName": "messaging_profile_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "to",
            "baseName": "to",
            "type": "Array<InboundMessagePayloadToInner>",
            "format": ""
        },
        {
            "name": "cc",
            "baseName": "cc",
            "type": "Array<InboundMessagePayloadCcInner>",
            "format": ""
        },
        {
            "name": "_from",
            "baseName": "from",
            "type": "InboundMessagePayloadFrom",
            "format": ""
        },
        {
            "name": "text",
            "baseName": "text",
            "type": "string",
            "format": ""
        },
        {
            "name": "media",
            "baseName": "media",
            "type": "Array<InboundMessagePayloadMediaInner>",
            "format": ""
        },
        {
            "name": "webhookUrl",
            "baseName": "webhook_url",
            "type": "string",
            "format": "url"
        },
        {
            "name": "webhookFailoverUrl",
            "baseName": "webhook_failover_url",
            "type": "string",
            "format": "url"
        },
        {
            "name": "encoding",
            "baseName": "encoding",
            "type": "string",
            "format": ""
        },
        {
            "name": "parts",
            "baseName": "parts",
            "type": "number",
            "format": ""
        },
        {
            "name": "tags",
            "baseName": "tags",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "cost",
            "baseName": "cost",
            "type": "InboundMessagePayloadCost",
            "format": ""
        },
        {
            "name": "receivedAt",
            "baseName": "received_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "sentAt",
            "baseName": "sent_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "completedAt",
            "baseName": "completed_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "validUntil",
            "baseName": "valid_until",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "errors",
            "baseName": "errors",
            "type": "Array<Error>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return InboundMessagePayload.attributeTypeMap;
    }

    public constructor() {
    }
}


export type InboundMessagePayloadRecordTypeEnum = "message" ;
export type InboundMessagePayloadDirectionEnum = "inbound" ;
export type InboundMessagePayloadTypeEnum = "SMS" | "MMS" ;

