/**
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http.ts';

export class ConferenceParticipantPlaybackEndedPayload {
    /**
    * Participant\'s call ID used to issue commands via Call Control API.
    */
    'callControlId'?: string;
    /**
    * ID that is unique to the call and can be used to correlate webhook events.
    */
    'callLegId'?: string;
    /**
    * ID that is unique to the call session and can be used to correlate webhook events. Call session is a group of related call legs that logically belong to the same phone call, e.g. an inbound and outbound leg of a transferred call.
    */
    'callSessionId'?: string;
    /**
    * State received from a command.
    */
    'clientState'?: string;
    /**
    * Call Control App ID (formerly Telnyx connection ID) used in the call.
    */
    'connectionId'?: string;
    /**
    * ID that is unique to the call session that started the conference.
    */
    'creatorCallSessionId'?: string;
    /**
    * ID of the conference the text was spoken in.
    */
    'conferenceId'?: string;
    /**
    * The audio URL being played back, if audio_url has been used to start.
    */
    'mediaUrl'?: string;
    /**
    * The name of the audio media file being played back, if media_name has been used to start.
    */
    'mediaName'?: string;
    /**
    * ISO 8601 datetime of when the event occurred.
    */
    'occurredAt'?: Date;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "callControlId",
            "baseName": "call_control_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "callLegId",
            "baseName": "call_leg_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "callSessionId",
            "baseName": "call_session_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "clientState",
            "baseName": "client_state",
            "type": "string",
            "format": ""
        },
        {
            "name": "connectionId",
            "baseName": "connection_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "creatorCallSessionId",
            "baseName": "creator_call_session_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "conferenceId",
            "baseName": "conference_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "mediaUrl",
            "baseName": "media_url",
            "type": "string",
            "format": ""
        },
        {
            "name": "mediaName",
            "baseName": "media_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "occurredAt",
            "baseName": "occurred_at",
            "type": "Date",
            "format": "date-time"
        }    ];

    static getAttributeTypeMap() {
        return ConferenceParticipantPlaybackEndedPayload.attributeTypeMap;
    }

    public constructor() {
    }
}

