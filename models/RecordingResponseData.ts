/**
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RecordingResponseDataDownloadUrls } from '../models/RecordingResponseDataDownloadUrls.ts';
import { HttpFile } from '../http/http.ts';

export class RecordingResponseData {
    /**
    * Unique identifier and token for controlling the call.
    */
    'callControlId'?: string;
    /**
    * ID that is unique to the call and can be used to correlate webhook events.
    */
    'callLegId'?: string;
    /**
    * ID that is unique to the call session and can be used to correlate webhook events. Call session is a group of related call legs that logically belong to the same phone call, e.g. an inbound and outbound leg of a transferred call.
    */
    'callSessionId'?: string;
    /**
    * When `dual`, final audio file has the first leg on channel A, and the rest on channel B.
    */
    'channels'?: RecordingResponseDataChannelsEnum;
    /**
    * Uniquely identifies the conference.
    */
    'conferenceId'?: string;
    /**
    * ISO 8601 formatted date indicating when the resource was created.
    */
    'createdAt'?: string;
    'downloadUrls'?: RecordingResponseDataDownloadUrls;
    /**
    * The duration of the recording in milliseconds.
    */
    'durationMillis'?: number;
    /**
    * Uniquely identifies the recording.
    */
    'id'?: string;
    'recordType'?: RecordingResponseDataRecordTypeEnum;
    /**
    * ISO 8601 formatted date of when the recording started.
    */
    'recordingStartedAt'?: string;
    /**
    * ISO 8601 formatted date of when the recording ended.
    */
    'recordingEndedAt'?: string;
    /**
    * The kind of event that led to this recording being created.
    */
    'source'?: RecordingResponseDataSourceEnum;
    /**
    * The status of the recording. Only resources for `completed` recordings are currently supported.
    */
    'status'?: RecordingResponseDataStatusEnum;
    /**
    * ISO 8601 formatted date indicating when the resource was updated.
    */
    'updatedAt'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "callControlId",
            "baseName": "call_control_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "callLegId",
            "baseName": "call_leg_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "callSessionId",
            "baseName": "call_session_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "channels",
            "baseName": "channels",
            "type": "RecordingResponseDataChannelsEnum",
            "format": ""
        },
        {
            "name": "conferenceId",
            "baseName": "conference_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "string",
            "format": ""
        },
        {
            "name": "downloadUrls",
            "baseName": "download_urls",
            "type": "RecordingResponseDataDownloadUrls",
            "format": ""
        },
        {
            "name": "durationMillis",
            "baseName": "duration_millis",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "recordType",
            "baseName": "record_type",
            "type": "RecordingResponseDataRecordTypeEnum",
            "format": ""
        },
        {
            "name": "recordingStartedAt",
            "baseName": "recording_started_at",
            "type": "string",
            "format": ""
        },
        {
            "name": "recordingEndedAt",
            "baseName": "recording_ended_at",
            "type": "string",
            "format": ""
        },
        {
            "name": "source",
            "baseName": "source",
            "type": "RecordingResponseDataSourceEnum",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "RecordingResponseDataStatusEnum",
            "format": ""
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return RecordingResponseData.attributeTypeMap;
    }

    public constructor() {
    }
}


export type RecordingResponseDataChannelsEnum = "single" | "dual" ;
export type RecordingResponseDataRecordTypeEnum = "recording" ;
export type RecordingResponseDataSourceEnum = "conference" | "call" ;
export type RecordingResponseDataStatusEnum = "completed" ;

