/**
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http.ts';

/**
* CampaignRequest object describes the campaign to be submitted via \'/campaignBuilder/brand/{brandId}/usecase/{usecase}\' operation. It is also used in operations for retrieving status of campaign request and for updating a pending request.
*/
export class CampaignRequest {
    /**
    * Does message content controlled by affiliate marketing other than the brand?
    */
    'affiliateMarketing'?: boolean;
    /**
    * Age gated message content in campaign.
    */
    'ageGated'?: boolean;
    /**
    * Campaign subscription auto-renewal option. If set to true, then campaign will automatically renewal at end of billing cycle.
    */
    'autoRenewal'?: boolean;
    /**
    * Alphanumeric identifier of the brand associated with this campaign.
    */
    'brandId': string;
    /**
    * Summary description of this campaign.
    */
    'description': string;
    /**
    * Direct lending or loan arrangement
    */
    'directLending'?: boolean;
    /**
    * Does message generated by the campaign include URL link in SMS?
    */
    'embeddedLink'?: boolean;
    /**
    * Does message generated by the campaign include phone number in SMS?
    */
    'embeddedPhone'?: boolean;
    /**
    * Subscriber help keywords. Multiple keywords are comma separated without space.
    */
    'helpKeywords'?: string;
    /**
    * Help message of the campaign.
    */
    'helpMessage'?: string;
    /**
    * Message flow description.
    */
    'messageFlow'?: string;
    /**
    * Submit campaign to given list of MNOs by MNO\'s network ID. Default is all MNOs if no value provided.
    */
    'mnoIds'?: Set<number>;
    /**
    * Does campaign utilize pool of phone numbers?
    */
    'numberPool'?: boolean;
    /**
    * Subscriber opt-in keywords. Multiple keywords are comma separated without space.
    */
    'optinKeywords'?: string;
    /**
    * Subscriber opt-in message.
    */
    'optinMessage'?: string;
    /**
    * Subscriber opt-out keywords. Multiple keywords are comma separated without space.
    */
    'optoutKeywords'?: string;
    /**
    * Subscriber opt-out message.
    */
    'optoutMessage'?: string;
    /**
    * Caller supplied campaign reference ID. If supplied, the value must be unique across all submitted campaigns. Can be used to prevent duplicate campaign registrations.
    */
    'referenceId'?: string;
    /**
    * Alphanumeric identifier of the reseller that you want to associate with this campaign.
    */
    'resellerId'?: string;
    /**
    * Message sample. Some campaign tiers require 1 or more message samples.
    */
    'sample1'?: string;
    /**
    * Message sample. Some campaign tiers require 2 or more message samples.
    */
    'sample2'?: string;
    /**
    * Message sample. Some campaign tiers require 3 or more message samples.
    */
    'sample3'?: string;
    /**
    * Message sample. Some campaign tiers require 4 or more message samples.
    */
    'sample4'?: string;
    /**
    * Message sample. Some campaign tiers require 5 or more message samples.
    */
    'sample5'?: string;
    /**
    * Campaign sub-usecases. Must be of defined valid sub-usecase types. Use `/registry/enum/usecase` operation to retrieve list of valid sub-usecases
    */
    'subUsecases'?: Set<string>;
    /**
    * Does campaign responds to help keyword(s)?
    */
    'subscriberHelp'?: boolean;
    /**
    * Does campaign require subscriber to opt-in before SMS is sent to subscriber?
    */
    'subscriberOptin'?: boolean;
    /**
    * Does campaign support subscriber opt-out keyword(s)?
    */
    'subscriberOptout'?: boolean;
    /**
    * Tags to be set on the Campaign.
    */
    'tag'?: Set<string>;
    /**
    * Is terms and conditions accepted?
    */
    'termsAndConditions'?: boolean;
    /**
    * Campaign usecase. Must be of defined valid types. Use `/registry/enum/usecase` operation to retrieve usecases available for given brand.
    */
    'usecase': string;
    /**
    * Webhook to which campaign status updates are sent.
    */
    'webhookURL'?: string;
    /**
    * Failover webhook to which campaign status updates are sent.
    */
    'webhookFailoverURL'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "affiliateMarketing",
            "baseName": "affiliateMarketing",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "ageGated",
            "baseName": "ageGated",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "autoRenewal",
            "baseName": "autoRenewal",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "brandId",
            "baseName": "brandId",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "directLending",
            "baseName": "directLending",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "embeddedLink",
            "baseName": "embeddedLink",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "embeddedPhone",
            "baseName": "embeddedPhone",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "helpKeywords",
            "baseName": "helpKeywords",
            "type": "string",
            "format": ""
        },
        {
            "name": "helpMessage",
            "baseName": "helpMessage",
            "type": "string",
            "format": ""
        },
        {
            "name": "messageFlow",
            "baseName": "messageFlow",
            "type": "string",
            "format": ""
        },
        {
            "name": "mnoIds",
            "baseName": "mnoIds",
            "type": "Set<number>",
            "format": ""
        },
        {
            "name": "numberPool",
            "baseName": "numberPool",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "optinKeywords",
            "baseName": "optinKeywords",
            "type": "string",
            "format": ""
        },
        {
            "name": "optinMessage",
            "baseName": "optinMessage",
            "type": "string",
            "format": ""
        },
        {
            "name": "optoutKeywords",
            "baseName": "optoutKeywords",
            "type": "string",
            "format": ""
        },
        {
            "name": "optoutMessage",
            "baseName": "optoutMessage",
            "type": "string",
            "format": ""
        },
        {
            "name": "referenceId",
            "baseName": "referenceId",
            "type": "string",
            "format": ""
        },
        {
            "name": "resellerId",
            "baseName": "resellerId",
            "type": "string",
            "format": ""
        },
        {
            "name": "sample1",
            "baseName": "sample1",
            "type": "string",
            "format": ""
        },
        {
            "name": "sample2",
            "baseName": "sample2",
            "type": "string",
            "format": ""
        },
        {
            "name": "sample3",
            "baseName": "sample3",
            "type": "string",
            "format": ""
        },
        {
            "name": "sample4",
            "baseName": "sample4",
            "type": "string",
            "format": ""
        },
        {
            "name": "sample5",
            "baseName": "sample5",
            "type": "string",
            "format": ""
        },
        {
            "name": "subUsecases",
            "baseName": "subUsecases",
            "type": "Set<string>",
            "format": ""
        },
        {
            "name": "subscriberHelp",
            "baseName": "subscriberHelp",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "subscriberOptin",
            "baseName": "subscriberOptin",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "subscriberOptout",
            "baseName": "subscriberOptout",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "tag",
            "baseName": "tag",
            "type": "Set<string>",
            "format": ""
        },
        {
            "name": "termsAndConditions",
            "baseName": "termsAndConditions",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "usecase",
            "baseName": "usecase",
            "type": "string",
            "format": ""
        },
        {
            "name": "webhookURL",
            "baseName": "webhookURL",
            "type": "string",
            "format": ""
        },
        {
            "name": "webhookFailoverURL",
            "baseName": "webhookFailoverURL",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return CampaignRequest.attributeTypeMap;
    }

    public constructor() {
    }
}

