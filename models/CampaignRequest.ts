/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * CampaignRequest object describes the campaign to be submitted via '/campaignBuilder/brand/{brandId}/usecase/{usecase}' operation. It is also used in operations for retrieving status of campaign request and for updating a pending request.
 */
export type CampaignRequest = {
    /**
     * Does message content controlled by affiliate marketing other than the brand?
     */
    affiliateMarketing?: boolean;
    /**
     * Age gated message content in campaign.
     */
    ageGated?: boolean;
    /**
     * Campaign subscription auto-renewal option. If set to true, then campaign will automatically renewal at end of billing cycle.
     */
    autoRenewal?: boolean;
    /**
     * Alphanumeric identifier of the brand associated with this campaign.
     */
    brandId: string;
    /**
     * Summary description of this campaign.
     */
    description: string;
    /**
     * Direct lending or loan arrangement
     */
    directLending?: boolean;
    /**
     * Does message generated by the campaign include URL link in SMS?
     */
    embeddedLink?: boolean;
    /**
     * Does message generated by the campaign include phone number in SMS?
     */
    embeddedPhone?: boolean;
    /**
     * Subscriber help keywords. Multiple keywords are comma separated without space.
     */
    helpKeywords?: string;
    /**
     * Help message of the campaign.
     */
    helpMessage?: string;
    /**
     * Message flow description.
     */
    messageFlow?: string;
    /**
     * Submit campaign to given list of MNOs by MNO's network ID. Default is all MNOs if no value provided.
     */
    mnoIds?: Array<number>;
    /**
     * Does campaign utilize pool of phone numbers?
     */
    numberPool?: boolean;
    /**
     * Subscriber opt-in keywords. Multiple keywords are comma separated without space.
     */
    optinKeywords?: string;
    /**
     * Subscriber opt-in message.
     */
    optinMessage?: string;
    /**
     * Subscriber opt-out keywords. Multiple keywords are comma separated without space.
     */
    optoutKeywords?: string;
    /**
     * Subscriber opt-out message.
     */
    optoutMessage?: string;
    /**
     * Caller supplied campaign reference ID. If supplied, the value must be unique across all submitted campaigns. Can be used to prevent duplicate campaign registrations.
     */
    referenceId?: string;
    /**
     * Alphanumeric identifier of the reseller that you want to associate with this campaign.
     */
    resellerId?: string;
    /**
     * Message sample. Some campaign tiers require 1 or more message samples.
     */
    sample1?: string;
    /**
     * Message sample. Some campaign tiers require 2 or more message samples.
     */
    sample2?: string;
    /**
     * Message sample. Some campaign tiers require 3 or more message samples.
     */
    sample3?: string;
    /**
     * Message sample. Some campaign tiers require 4 or more message samples.
     */
    sample4?: string;
    /**
     * Message sample. Some campaign tiers require 5 or more message samples.
     */
    sample5?: string;
    /**
     * Campaign sub-usecases. Must be of defined valid sub-usecase types. Use `/registry/enum/usecase` operation to retrieve list of valid sub-usecases
     */
    subUsecases?: Array<string>;
    /**
     * Does campaign responds to help keyword(s)?
     */
    subscriberHelp?: boolean;
    /**
     * Does campaign require subscriber to opt-in before SMS is sent to subscriber?
     */
    subscriberOptin?: boolean;
    /**
     * Does campaign support subscriber opt-out keyword(s)?
     */
    subscriberOptout?: boolean;
    /**
     * Tags to be set on the Campaign.
     */
    tag?: Array<string>;
    /**
     * Is terms and conditions accepted?
     */
    termsAndConditions?: boolean;
    /**
     * Campaign usecase. Must be of defined valid types. Use `/registry/enum/usecase` operation to retrieve usecases available for given brand.
     */
    usecase: string;
    /**
     * Webhook to which campaign status updates are sent.
     */
    webhookURL?: string;
    /**
     * Failover webhook to which campaign status updates are sent.
     */
    webhookFailoverURL?: string;
};

