/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * Campaign is generated by the 10DLC registry once the corresponding campaign request is approved. Each campaign is assigned a unique identifier - **campaignId**. Once a campaign is activated, limited information is published to the NetNumber OSR service for consumption by members of the ecosystem. When a campaign is suspended(reversible) or expired(non-reversible), campaign data is deleted from the OSR service. Most attributes of campaignare immutable, including **usecase**, **vertical**, **brandId** and **cspId**.
 */
export type Campaign_CSP = {
    /**
     * Does message content controlled by affiliate marketing other than the brand?
     *
     * This field is deprecated.
     * @deprecated
     */
    affiliateMarketing?: boolean;
    /**
     * Age gated content in campaign.
     */
    ageGated?: boolean;
    /**
     * Campaign subscription auto-renewal status.
     */
    autoRenewal?: boolean;
    /**
     * Campaign recent billed date.
     */
    billedDate?: string;
    /**
     * Alphanumeric identifier of the brand associated with this campaign.
     */
    brandId: string;
    /**
     * Alphanumeric identifier assigned by the registry for a campaign. This identifier is required by the NetNumber OSR SMS enabling process of 10DLC.
     */
    campaignId: string;
    /**
     * Unix timestamp when campaign was created.
     */
    createDate?: string;
    /**
     * Alphanumeric identifier of the CSP associated with this campaign.
     */
    cspId: string;
    /**
     * Summary description of this campaign.
     */
    description: string;
    directLending?: boolean;
    /**
     * Does message generated by the campaign include URL link in SMS?
     */
    embeddedLink?: boolean;
    /**
     * Does message generated by the campaign include phone number in SMS?
     */
    embeddedPhone?: boolean;
    /**
     * Subscriber help keywords. Multiple keywords are comma separated without space.
     */
    helpKeywords?: string;
    /**
     * Help message of the campaign.
     */
    helpMessage?: string;
    /**
     * Message flow description.
     */
    messageFlow?: string;
    /**
     * Campaign created from mock brand. Mocked campaign cannot be shared with an upstream CNP.
     */
    mock: boolean;
    /**
     * When the campaign would be due for its next renew/bill date.
     */
    nextRenewalOrExpirationDate?: string;
    /**
     * Does campaign utilize pool of phone numbers?
     */
    numberPool?: boolean;
    /**
     * Subscriber opt-in keywords. Multiple keywords are comma separated without space.
     */
    optinKeywords?: string;
    /**
     * Subscriber opt-in message.
     */
    optinMessage?: string;
    /**
     * Subscriber opt-out keywords. Multiple keywords are comma separated without space.
     */
    optoutKeywords?: string;
    /**
     * Subscriber opt-out message.
     */
    optoutMessage?: string;
    /**
     * Caller supplied campaign reference ID. If supplied, the value must be unique across all submitted campaigns. Can be used to prevent duplicate campaign registrations.
     */
    referenceId?: string;
    /**
     * Alphanumeric identifier of the reseller that you want to associate with this campaign.
     */
    resellerId?: string;
    /**
     * Message sample. Some campaign tiers require 1 or more message samples.
     */
    sample1?: string;
    /**
     * Message sample. Some campaign tiers require 2 or more message samples.
     */
    sample2?: string;
    /**
     * Message sample. Some campaign tiers require 3 or more message samples.
     */
    sample3?: string;
    /**
     * Message sample. Some campaign tiers require 4 or more message samples.
     */
    sample4?: string;
    /**
     * Message sample. Some campaign tiers require 5 or more message samples.
     */
    sample5?: string;
    /**
     * Current campaign status. Possible values: ACTIVE, EXPIRED. A newly created campaign defaults to ACTIVE status.
     */
    status?: string;
    /**
     * Campaign sub-usecases. Must be of defined valid sub-usecase types. Use `/registry/enum/usecase` operation to retrieve list of valid sub-usecases
     */
    subUsecases: Array<string>;
    /**
     * Does campaign responds to help keyword(s)?
     */
    subscriberHelp?: boolean;
    /**
     * Does campaign require subscriber to opt-in before SMS is sent to subscriber?
     */
    subscriberOptin?: boolean;
    /**
     * Does campaign support subscriber opt-out keyword(s)?
     */
    subscriberOptout?: boolean;
    /**
     * Is terms & conditions accepted?
     */
    termsAndConditions: boolean;
    /**
     * Campaign usecase. Must be of defined valid types. Use `/registry/enum/usecase` operation to retrieve usecases available for given brand.
     */
    usecase: string;
    /**
     * Business/industry segment of this campaign (Deprecated). Must be of defined valid types. Use `/registry/enum/vertical` operation to retrieve verticals available for given brand, vertical combination.
     *
     * This field is deprecated.
     * @deprecated
     */
    vertical?: string;
    /**
     * Webhook to which campaign status updates are sent.
     */
    webhookURL?: string;
    /**
     * Failover webhook to which campaign status updates are sent.
     */
    webhookFailoverURL?: string;
};

