/**
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http.ts';

export class ConferenceDetailRecord {
    /**
    * Conference id
    */
    'id'?: string;
    /**
    * Conference name
    */
    'name'?: string;
    /**
    * User id
    */
    'userId'?: string;
    /**
    * Conference start time
    */
    'startedAt'?: Date;
    /**
    * Conference end time
    */
    'endedAt'?: Date;
    /**
    * Conference expiry time
    */
    'expiresAt'?: Date;
    /**
    * Region where the conference is hosted
    */
    'region'?: string;
    /**
    * Telnyx UUID that identifies the conference call leg
    */
    'callLegId'?: string;
    /**
    * Telnyx UUID that identifies with conference call session
    */
    'callSessionId'?: string;
    /**
    * Connection id
    */
    'connectionId'?: string;
    /**
    * Duration of the conference call in seconds
    */
    'callSec'?: number;
    /**
    * Number of participants that joined the conference call
    */
    'participantCount'?: number;
    /**
    * Sum of the conference call duration for all participants in seconds
    */
    'participantCallSec'?: number;
    /**
    * Indicates whether Telnyx billing charges might be applicable
    */
    'isTelnyxBillable'?: boolean;
    'recordType': string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "userId",
            "baseName": "user_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "startedAt",
            "baseName": "started_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "endedAt",
            "baseName": "ended_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "expiresAt",
            "baseName": "expires_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "region",
            "baseName": "region",
            "type": "string",
            "format": ""
        },
        {
            "name": "callLegId",
            "baseName": "call_leg_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "callSessionId",
            "baseName": "call_session_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "connectionId",
            "baseName": "connection_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "callSec",
            "baseName": "call_sec",
            "type": "number",
            "format": ""
        },
        {
            "name": "participantCount",
            "baseName": "participant_count",
            "type": "number",
            "format": ""
        },
        {
            "name": "participantCallSec",
            "baseName": "participant_call_sec",
            "type": "number",
            "format": ""
        },
        {
            "name": "isTelnyxBillable",
            "baseName": "is_telnyx_billable",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "recordType",
            "baseName": "record_type",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ConferenceDetailRecord.attributeTypeMap;
    }

    public constructor() {
    }
}

