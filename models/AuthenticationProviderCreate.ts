/**
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Settings } from '../models/Settings.ts';
import { HttpFile } from '../http/http.ts';

export class AuthenticationProviderCreate {
    /**
    * The name associated with the authentication provider.
    */
    'name': string;
    /**
    * The short name associated with the authentication provider. This must be unique and URL-friendly, as it\'s going to be part of the login URL.
    */
    'shortName': string;
    /**
    * The active status of the authentication provider
    */
    'active'?: boolean;
    'settings': Settings;
    /**
    * The URL for the identity provider metadata file to populate the settings automatically. If the settings attribute is provided, that will be used instead.
    */
    'settingsUrl'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "shortName",
            "baseName": "short_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "active",
            "baseName": "active",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "settings",
            "baseName": "settings",
            "type": "Settings",
            "format": ""
        },
        {
            "name": "settingsUrl",
            "baseName": "settings_url",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return AuthenticationProviderCreate.attributeTypeMap;
    }

    public constructor() {
    }
}

