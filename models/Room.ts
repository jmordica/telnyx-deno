/**
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RoomSession } from '../models/RoomSession.ts';
import { HttpFile } from '../http/http.ts';

export class Room {
    /**
    * A unique identifier for the room.
    */
    'id'?: string;
    /**
    * Maximum participants allowed in the room.
    */
    'maxParticipants'?: number;
    /**
    * The unique (within the Telnyx account scope) name of the room.
    */
    'uniqueName'?: string;
    /**
    * ISO 8601 timestamp when the room was created.
    */
    'createdAt'?: string;
    /**
    * ISO 8601 timestamp when the room was updated.
    */
    'updatedAt'?: string;
    /**
    * The identifier of the active room session if any.
    */
    'activeSessionId'?: string;
    'sessions'?: Array<RoomSession>;
    /**
    * Enable or disable recording for that room.
    */
    'enableRecording'?: boolean;
    /**
    * The URL where webhooks related to this room will be sent. Must include a scheme, such as \'https\'.
    */
    'webhookEventUrl'?: string;
    /**
    * The failover URL where webhooks related to this room will be sent if sending to the primary URL fails. Must include a scheme, such as \'https\'.
    */
    'webhookEventFailoverUrl'?: string | null;
    /**
    * Specifies how many seconds to wait before timing out a webhook.
    */
    'webhookTimeoutSecs'?: number | null;
    'recordType'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "maxParticipants",
            "baseName": "max_participants",
            "type": "number",
            "format": ""
        },
        {
            "name": "uniqueName",
            "baseName": "unique_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "string",
            "format": "datetime"
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "string",
            "format": "datetime"
        },
        {
            "name": "activeSessionId",
            "baseName": "active_session_id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "sessions",
            "baseName": "sessions",
            "type": "Array<RoomSession>",
            "format": ""
        },
        {
            "name": "enableRecording",
            "baseName": "enable_recording",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "webhookEventUrl",
            "baseName": "webhook_event_url",
            "type": "string",
            "format": "url"
        },
        {
            "name": "webhookEventFailoverUrl",
            "baseName": "webhook_event_failover_url",
            "type": "string",
            "format": "url"
        },
        {
            "name": "webhookTimeoutSecs",
            "baseName": "webhook_timeout_secs",
            "type": "number",
            "format": ""
        },
        {
            "name": "recordType",
            "baseName": "record_type",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Room.attributeTypeMap;
    }

    public constructor() {
    }
}

