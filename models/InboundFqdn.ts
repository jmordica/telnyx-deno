/**
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http.ts';

export class InboundFqdn {
    /**
    * This setting allows you to set the format with which the caller\'s number (ANI) is sent for inbound phone calls.
    */
    'aniNumberFormat'?: InboundFqdnAniNumberFormatEnum;
    'dnisNumberFormat'?: InboundFqdnDnisNumberFormatEnum;
    /**
    * Defines the list of codecs that Telnyx will send for inbound calls to a specific number on your portal account, in priority order. This only works when the Connection the number is assigned to uses Media Handling mode: default. OPUS and H.264 codecs are available only when using TCP or TLS transport for SIP.
    */
    'codecs'?: Array<string>;
    /**
    * Default routing method to be used when a number is associated with the connection. Must be one of the routing method types or null, other values are not allowed.
    */
    'defaultRoutingMethod'?: InboundFqdnDefaultRoutingMethodEnum | null;
    /**
    * When set, this will limit the total number of inbound calls to phone numbers associated with this connection.
    */
    'channelLimit'?: number | null;
    /**
    * Generate ringback tone through 183 session progress message with early media.
    */
    'generateRingbackTone'?: boolean;
    /**
    * When set, inbound phone calls will receive ISUP parameters via SIP headers. (Only when available and only when using TCP or TLS transport.)
    */
    'isupHeadersEnabled'?: boolean;
    /**
    * Enable PRACK messages as defined in RFC3262.
    */
    'prackEnabled'?: boolean;
    /**
    * By default, Telnyx does not send caller-id information when the caller has chosen to hide this information. When this option is enabled, Telnyx will send the SIP header Privacy:id plus the caller-id information so that the receiver side can choose when to hide it.
    */
    'privacyZoneEnabled'?: boolean;
    /**
    * Defaults to true.
    */
    'sipCompactHeadersEnabled'?: boolean;
    /**
    * Selects which `sip_region` to receive inbound calls from. If null, the default region (US) will be used.
    */
    'sipRegion'?: InboundFqdnSipRegionEnum;
    /**
    * Specifies a subdomain that can be used to receive Inbound calls to a Connection, in the same way a phone number is used, from a SIP endpoint. Example: the subdomain \"example.sip.telnyx.com\" can be called from any SIP endpoint by using the SIP URI \"sip:@example.sip.telnyx.com\" where the user part can be any alphanumeric value. Please note TLS encrypted calls are not allowed for subdomain calls.
    */
    'sipSubdomain'?: string | null;
    /**
    * This option can be enabled to receive calls from: \"Anyone\" (any SIP endpoint in the public Internet) or \"Only my connections\" (any connection assigned to the same Telnyx user).
    */
    'sipSubdomainReceiveSettings'?: InboundFqdnSipSubdomainReceiveSettingsEnum;
    /**
    * Time(sec) before aborting if connection is not made.
    */
    'timeout1xxSecs'?: number;
    /**
    * Time(sec) before aborting if call is unanswered (min: 1, max: 600).
    */
    'timeout2xxSecs'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "aniNumberFormat",
            "baseName": "ani_number_format",
            "type": "InboundFqdnAniNumberFormatEnum",
            "format": ""
        },
        {
            "name": "dnisNumberFormat",
            "baseName": "dnis_number_format",
            "type": "InboundFqdnDnisNumberFormatEnum",
            "format": ""
        },
        {
            "name": "codecs",
            "baseName": "codecs",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "defaultRoutingMethod",
            "baseName": "default_routing_method",
            "type": "InboundFqdnDefaultRoutingMethodEnum",
            "format": ""
        },
        {
            "name": "channelLimit",
            "baseName": "channel_limit",
            "type": "number",
            "format": ""
        },
        {
            "name": "generateRingbackTone",
            "baseName": "generate_ringback_tone",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isupHeadersEnabled",
            "baseName": "isup_headers_enabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "prackEnabled",
            "baseName": "prack_enabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "privacyZoneEnabled",
            "baseName": "privacy_zone_enabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "sipCompactHeadersEnabled",
            "baseName": "sip_compact_headers_enabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "sipRegion",
            "baseName": "sip_region",
            "type": "InboundFqdnSipRegionEnum",
            "format": ""
        },
        {
            "name": "sipSubdomain",
            "baseName": "sip_subdomain",
            "type": "string",
            "format": ""
        },
        {
            "name": "sipSubdomainReceiveSettings",
            "baseName": "sip_subdomain_receive_settings",
            "type": "InboundFqdnSipSubdomainReceiveSettingsEnum",
            "format": ""
        },
        {
            "name": "timeout1xxSecs",
            "baseName": "timeout_1xx_secs",
            "type": "number",
            "format": ""
        },
        {
            "name": "timeout2xxSecs",
            "baseName": "timeout_2xx_secs",
            "type": "number",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return InboundFqdn.attributeTypeMap;
    }

    public constructor() {
    }
}


export type InboundFqdnAniNumberFormatEnum = "+E.164" | "E.164" | "+E.164-national" | "E.164-national" ;
export type InboundFqdnDnisNumberFormatEnum = "+e164" | "e164" | "national" | "sip_username" ;
export type InboundFqdnDefaultRoutingMethodEnum = "sequential" | "round-robin" ;
export type InboundFqdnSipRegionEnum = "US" | "Europe" | "Australia" ;
export type InboundFqdnSipSubdomainReceiveSettingsEnum = "only_my_connections" | "from_anyone" ;

