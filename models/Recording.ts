/**
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RecordingDownloadUrls } from '../models/RecordingDownloadUrls.ts';
import { HttpFile } from '../http/http.ts';

export class Recording {
    'recordType': RecordingRecordTypeEnum;
    /**
    * Uniquely identifies the recording
    */
    'id': string;
    /**
    * ISO 8601 formatted date of when the recording was created
    */
    'createdAt': string;
    /**
    * ISO 8601 formatted date of when the recording was last updated
    */
    'updatedAt': string;
    /**
    * ISO 8601 formatted date of when the recording started
    */
    'recordingStartedAt': string;
    /**
    * ISO 8601 formatted date of when the recording ended
    */
    'recordingEndedAt': string;
    /**
    * The duration of the recording in milliseconds
    */
    'durationMillis': number;
    /**
    * The status of the recording. Only resources for `completed` recordings are currently supported
    */
    'status': RecordingStatusEnum;
    /**
    * When `dual`, final audio file has the first leg on channel A, and the rest on channel B.
    */
    'channels': RecordingChannelsEnum;
    /**
    * The kind of event that led to this recording being created
    */
    'source': RecordingSourceEnum;
    /**
    * If a conference recording, uniquely identifies the recorded conference
    */
    'conferenceId'?: string;
    /**
    * If a call recording, uniquely identifies the recorded call leg
    */
    'callLegId'?: string;
    /**
    * If a call recording, uniquely identifies the recorded call session
    */
    'callSessionId'?: string;
    'downloadUrls': RecordingDownloadUrls;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "recordType",
            "baseName": "record_type",
            "type": "RecordingRecordTypeEnum",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "string",
            "format": ""
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "string",
            "format": ""
        },
        {
            "name": "recordingStartedAt",
            "baseName": "recording_started_at",
            "type": "string",
            "format": ""
        },
        {
            "name": "recordingEndedAt",
            "baseName": "recording_ended_at",
            "type": "string",
            "format": ""
        },
        {
            "name": "durationMillis",
            "baseName": "duration_millis",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "RecordingStatusEnum",
            "format": ""
        },
        {
            "name": "channels",
            "baseName": "channels",
            "type": "RecordingChannelsEnum",
            "format": ""
        },
        {
            "name": "source",
            "baseName": "source",
            "type": "RecordingSourceEnum",
            "format": ""
        },
        {
            "name": "conferenceId",
            "baseName": "conference_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "callLegId",
            "baseName": "call_leg_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "callSessionId",
            "baseName": "call_session_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "downloadUrls",
            "baseName": "download_urls",
            "type": "RecordingDownloadUrls",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Recording.attributeTypeMap;
    }

    public constructor() {
    }
}


export type RecordingRecordTypeEnum = "recording" ;
export type RecordingStatusEnum = "completed" ;
export type RecordingChannelsEnum = "single" | "dual" ;
export type RecordingSourceEnum = "conference" | "call" ;

