/**
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { VideoRegion } from '../models/VideoRegion.ts';
import { HttpFile } from '../http/http.ts';

export class RoomComposition {
    /**
    * A unique identifier for the room composition.
    */
    'id'?: string;
    /**
    * Identify the room associated with the room composition.
    */
    'roomId'?: string;
    /**
    * Identify the room session associated with the room composition.
    */
    'sessionId'?: string;
    /**
    * Identify the user associated with the room composition.
    */
    'userId'?: string;
    /**
    * Shows the room composition status.
    */
    'status'?: RoomCompositionStatusEnum;
    /**
    * Shows the room composition size in MB.
    */
    'sizeMb'?: number;
    /**
    * Url to download the composition.
    */
    'downloadUrl'?: string;
    /**
    * Shows the room composition duration in seconds.
    */
    'durationSecs'?: number;
    /**
    * Shows format of the room composition.
    */
    'format'?: RoomCompositionFormatEnum;
    /**
    * ISO 8601 timestamp when the room composition was created.
    */
    'createdAt'?: string;
    /**
    * ISO 8601 timestamp when the room composition was updated.
    */
    'updatedAt'?: string;
    /**
    * ISO 8601 timestamp when the room composition has ended.
    */
    'endedAt'?: string;
    /**
    * ISO 8601 timestamp when the room composition has stated.
    */
    'startedAt'?: string;
    /**
    * ISO 8601 timestamp when the room composition has completed.
    */
    'completedAt'?: string;
    /**
    * Describes the video layout of the room composition in terms of regions. Limited to 2 regions.
    */
    'videoLayout'?: { [key: string]: VideoRegion; };
    /**
    * The URL where webhooks related to this room composition will be sent. Must include a scheme, such as \'https\'.
    */
    'webhookEventUrl'?: string;
    /**
    * The failover URL where webhooks related to this room composition will be sent if sending to the primary URL fails. Must include a scheme, such as \'https\'.
    */
    'webhookEventFailoverUrl'?: string | null;
    /**
    * Specifies how many seconds to wait before timing out a webhook.
    */
    'webhookTimeoutSecs'?: number | null;
    'recordType'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "roomId",
            "baseName": "room_id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "sessionId",
            "baseName": "session_id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "userId",
            "baseName": "user_id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "RoomCompositionStatusEnum",
            "format": ""
        },
        {
            "name": "sizeMb",
            "baseName": "size_mb",
            "type": "number",
            "format": "float"
        },
        {
            "name": "downloadUrl",
            "baseName": "download_url",
            "type": "string",
            "format": ""
        },
        {
            "name": "durationSecs",
            "baseName": "duration_secs",
            "type": "number",
            "format": ""
        },
        {
            "name": "format",
            "baseName": "format",
            "type": "RoomCompositionFormatEnum",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "string",
            "format": "datetime"
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "string",
            "format": "datetime"
        },
        {
            "name": "endedAt",
            "baseName": "ended_at",
            "type": "string",
            "format": "datetime"
        },
        {
            "name": "startedAt",
            "baseName": "started_at",
            "type": "string",
            "format": "datetime"
        },
        {
            "name": "completedAt",
            "baseName": "completed_at",
            "type": "string",
            "format": "datetime"
        },
        {
            "name": "videoLayout",
            "baseName": "video_layout",
            "type": "{ [key: string]: VideoRegion; }",
            "format": ""
        },
        {
            "name": "webhookEventUrl",
            "baseName": "webhook_event_url",
            "type": "string",
            "format": "url"
        },
        {
            "name": "webhookEventFailoverUrl",
            "baseName": "webhook_event_failover_url",
            "type": "string",
            "format": "url"
        },
        {
            "name": "webhookTimeoutSecs",
            "baseName": "webhook_timeout_secs",
            "type": "number",
            "format": ""
        },
        {
            "name": "recordType",
            "baseName": "record_type",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return RoomComposition.attributeTypeMap;
    }

    public constructor() {
    }
}


export type RoomCompositionStatusEnum = "completed" | "enqueued" | "processing" ;
export type RoomCompositionFormatEnum = "mp4" ;

