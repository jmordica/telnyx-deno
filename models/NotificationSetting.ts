/**
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { NotificationSettingParametersInner } from '../models/NotificationSettingParametersInner.ts';
import { HttpFile } from '../http/http.ts';

export class NotificationSetting {
    /**
    * A UUID.
    */
    'id'?: string;
    /**
    * A UUID reference to the associated Notification Event Condition.
    */
    'notificationEventConditionId'?: string;
    /**
    * A UUID reference to the associated Notification Profile.
    */
    'notificationProfileId'?: string;
    'associatedRecordType'?: string;
    'associatedRecordTypeValue'?: string;
    /**
    * Most preferences apply immediately; however, other may needs to propagate.
    */
    'status'?: NotificationSettingStatusEnum;
    /**
    * A UUID reference to the associated Notification Channel.
    */
    'notificationChannelId'?: string;
    'parameters'?: Array<NotificationSettingParametersInner>;
    /**
    * ISO 8601 formatted date indicating when the resource was created.
    */
    'createdAt'?: Date;
    /**
    * ISO 8601 formatted date indicating when the resource was updated.
    */
    'updatedAt'?: Date;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "notificationEventConditionId",
            "baseName": "notification_event_condition_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "notificationProfileId",
            "baseName": "notification_profile_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "associatedRecordType",
            "baseName": "associated_record_type",
            "type": "string",
            "format": ""
        },
        {
            "name": "associatedRecordTypeValue",
            "baseName": "associated_record_type_value",
            "type": "string",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "NotificationSettingStatusEnum",
            "format": ""
        },
        {
            "name": "notificationChannelId",
            "baseName": "notification_channel_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "parameters",
            "baseName": "parameters",
            "type": "Array<NotificationSettingParametersInner>",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "Date",
            "format": "date-time"
        }    ];

    static getAttributeTypeMap() {
        return NotificationSetting.attributeTypeMap;
    }

    public constructor() {
    }
}


export type NotificationSettingStatusEnum = "enabled" | "enable-received" | "enable-pending" | "enable-submtited" | "delete-received" | "delete-pending" | "delete-submitted" | "deleted" ;

