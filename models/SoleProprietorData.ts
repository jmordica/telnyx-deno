/**
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { EntityType } from '../models/EntityType.ts';
import { Usecase } from '../models/Usecase.ts';
import { Vertical } from '../models/Vertical.ts';
import { HttpFile } from '../http/http.ts';

export class SoleProprietorData {
    /**
    * City name
    */
    'city'?: string;
    /**
    * (Required for Non-profit/private/public) Legal company name.
    */
    'companyName'?: string;
    /**
    * ISO2 2 characters country code. Example: US - United States
    */
    'country': string;
    /**
    * A brief description about the campaign.
    */
    'description': string;
    /**
    * Display name, marketing name, or DBA name of the brand.
    */
    'displayName': string;
    /**
    * Valid email address of brand support contact.
    */
    'email': string;
    'entityType': EntityType;
    /**
    * First name of business contact.
    */
    'firstName'?: string;
    /**
    * Last name of business contact.
    */
    'lastName'?: string;
    /**
    * Valid phone number in e.164 international format.
    */
    'phone'?: string;
    /**
    * The phone numbers that will be assigned to the Sole Proprietor\'s campaign (Max of 5).
    */
    'phoneNumbers': Array<string>;
    /**
    * Postal codes. Use 5 digit zipcode for United States
    */
    'postalCode'?: string;
    /**
    * A user generated unique identifier that keeps track of sole proprietor brand/campaign combinations submitted during bulk creation.
    */
    'referenceId': string;
    /**
    * The sample_messages that will be assigned to the Sole Proprietor\'s campaign (Max of 5).
    */
    'sampleMessages': Array<string>;
    /**
    * State. Must be 2 letters code for United States.
    */
    'state'?: string;
    /**
    * Street number and name.
    */
    'street'?: string;
    /**
    * The sub use cases that will be assigned to the Sole Proprietor\'s campaign (Max of 5).
    */
    'subUsecases': Array<Usecase>;
    'vertical': Vertical;
    /**
    * Brand website URL.
    */
    'website'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "city",
            "baseName": "city",
            "type": "string",
            "format": ""
        },
        {
            "name": "companyName",
            "baseName": "companyName",
            "type": "string",
            "format": ""
        },
        {
            "name": "country",
            "baseName": "country",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "displayName",
            "baseName": "displayName",
            "type": "string",
            "format": ""
        },
        {
            "name": "email",
            "baseName": "email",
            "type": "string",
            "format": ""
        },
        {
            "name": "entityType",
            "baseName": "entityType",
            "type": "EntityType",
            "format": ""
        },
        {
            "name": "firstName",
            "baseName": "firstName",
            "type": "string",
            "format": ""
        },
        {
            "name": "lastName",
            "baseName": "lastName",
            "type": "string",
            "format": ""
        },
        {
            "name": "phone",
            "baseName": "phone",
            "type": "string",
            "format": ""
        },
        {
            "name": "phoneNumbers",
            "baseName": "phoneNumbers",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "postalCode",
            "baseName": "postalCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "referenceId",
            "baseName": "referenceId",
            "type": "string",
            "format": ""
        },
        {
            "name": "sampleMessages",
            "baseName": "sampleMessages",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "string",
            "format": ""
        },
        {
            "name": "street",
            "baseName": "street",
            "type": "string",
            "format": ""
        },
        {
            "name": "subUsecases",
            "baseName": "subUsecases",
            "type": "Array<Usecase>",
            "format": ""
        },
        {
            "name": "vertical",
            "baseName": "vertical",
            "type": "Vertical",
            "format": ""
        },
        {
            "name": "website",
            "baseName": "website",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return SoleProprietorData.attributeTypeMap;
    }

    public constructor() {
    }
}



